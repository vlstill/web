@inproceedings{svcomp2019,
 abstract = {DIVINE is an LLVM-based verification tool focusing on analysis of real-world C and C++ programs. Such programs often interact with their environment, for example via inputs from users or network. When these programs are analyzed, it is desirable that the verification tool can deal with inputs symbolically and analyze runs for all inputs. In DIVINE, it is now possible to deal with input data via symbolic computation instrumented into the original program at the level of LLVM bitcode. Such an instrumented program maintains symbolic values internally and operates directly on them. Instrumentation allows us to enhance the tool with support for symbolic data without substantial modifications of the tool itself. Namely, this competition contribution uses SMT formulae for representation of input data.},
 address = {Cham},
 author = {Lauko, Henrich
and {\v{S}}till, Vladim{\'i}r
and Ro{\v{c}}kai, Petr
and Barnat, Ji{\v{r}}{\'i}},
 booktitle = {{Tools and Algorithms for the Construction and Analysis of Systems}},
 doi = {10.1007/978-3-030-17502-3_14},
 editor = {Beyer, Dirk
and Huisman, Marieke
and Kordon, Fabrice
and Steffen, Bernhard},
 isbn = {978-3-030-17502-3},
 pages = {204--208},
 publisher = {Springer International Publishing},
 title = {{Extending DIVINE with Symbolic Verification Using SMT}},
 year = {2019}
}

